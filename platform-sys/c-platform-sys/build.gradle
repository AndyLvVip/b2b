plugins {
    id 'nu.studer.jooq' version '3.0.3'
}
version '1.0-SNAPSHOT'

bootJar.enabled = false
jar.enabled = true

ext['springCloudVersion'] = 'Greenwich.SR1'

dependencies {
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    implementation project(':util')
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    jooqRuntime 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
}


jooq {
    version = '3.11.9'
    edition = 'OSS'
    platformSys(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            url = 'jdbc:mysql://127.0.0.1:3306/platform_sys'
            user = 'andy'
            password = 'password'
            properties {
                property {
                    key = 'ssl'
                    value = 'true'
                }
            }
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'platform_sys'
                outputSchemaToDefault = true
                recordVersionFields = 'version'
                includes = 'menu|permission|role|user_role'
                forcedTypes {
                    forcedType {
                        name = 'Integer'
                        types = 'tinyint'
                    }
                }
                // ...
            }
            generate {
                javaTimeTypes = true
//                relations = true
//                deprecated = false
//                records = true
//                immutablePojos = true
//                daos = true
//                fluentSetters = true
                // ...
            }
            target {
                packageName = 'jooq.generated.platform.sys'
                directory = 'src/main/java'
            }
        }
    }
}


// removes the task dependency from compileJava to generateSampleJooqSchemaSource
project.tasks.getByName('compileJava').dependsOn -= 'generatePlatformSysJooqSchemaSource'